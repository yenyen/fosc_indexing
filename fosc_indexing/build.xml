<?xml version="1.0" ?>

<!-- Ant to compile and create jars for BDA labs. -->

<project name="bda_labs" default="jar" basedir=".">
        
        <!--
        s3n://mse-bda-phanzu/jar/bda_labs_0.1.jar
        19 s3n://mse-bda-data/data/wikipedia s3n://mse-bda-phanzu/data/output-labo4        
        -->

        <property name="project.compiler.version" value="1.6" />
        <property name="project.runtime.version" value="1.6" />
        <!--
        <property name="src.dir" value="${basedir}/src/main/java" />
        -->
        <property name="src.dir" value="${basedir}/src" />


        <!-- program version -->
        <property name="version" value="0.1" />
        <property name="jar.file" value="${basedir}/jar/bda_labs_${version}.jar" />

        <!-- <property name="hadoop.home" value="/opt/hadoop"/> -->
        <condition property="hadoop.home" value="e:/apache/hadoop/1.0.3" else="/opt/hadoop">
                <os family="windows" />
        </condition>
        <condition property="hadoop.exec" value="${hadoop.home}/bin/hadoop.cmd" else="${hadoop.home}/bin/hadoop">
                <os family="windows" />
        </condition>



        <!--
        <property name="data.main.class" value="heigvd.bda.labs.indexing.InvertedIndex" />
        <property name="data.main.class" value="heigvd.bda.labs.indexing.InvertedIndexWikipedia" />
        <property name="data.main.class" value="heigvd.bda.labs.indexing.InvertedIndexWikipediaText" />
        <property name="data.main.class" value="heigvd.bda.labs.foscindexing.FoscIndexing" />
        -->
        <property name="data.main.class" value="heigvd.bda.labs.foscindexing.FoscIndexing" />
        
        <property name="data.output.dir" value="${basedir}/data/output" />
        <property name="data.input.dir" value="${basedir}/data/input" />
        <property name="data.firstName.dir" value="${basedir}/data/firstName" />
        <property name="data.file" value="out.txt"/>
        <!--
        <property name="data.file" value="enwiki-latest-pages-articles.xml.parsed.full.100"/>
        <property name="data.file" value="quote"/>
        <property name="data.file" value="simple-data.txt"/> 
        <property name="data.file" value="bible_shakes.nopunc.gz"/>
        <property name="data.file" value="066100-99999-1973.gz"/>
        -->
        <property name="reducers.number" value="1000" />

        <!-- temporary directory for compiling (will be removed) -->
        <property name="classDir" value="${basedir}/target/main/classes" />
        
        <property name="unjar.dir" value="${basedir}/target/main/unjar" />
        <property name="unjar.file" value="${basedir}/unjar.notRequired" />
        
        <available property="unjar.notRequired" file="${unjar.file}"/>
        
        <target name="info">
                <echoproperties/>
        </target>
        <!-- initialization: executed for all targets -->
        <target name="compile">
                
                <!-- classpath: all files in lib -->
                <mkdir dir="${classDir}"/>                
                <path id="classpath">
                        <fileset dir="lib" includes="**/*.jar"/>
                </path>
                
                <!-- source files -->
                <!--
                        target="${project.compiler.version}"
                        compiler="${project.compiler.version}"
                        source="${project.compiler.version}"
                        includeantruntime="true"
                
                -->
                <javac
                        srcdir="${src.dir}"
                        classpathref="classpath"
                        destdir="${classDir}"
                        debug="on"/>
                
        </target>

        <!-- unpack libraries and put with compiled files -->
        <target name="unpack" >
        
                <copy todir="${classDir}">
                        <fileset dir="lib"/>
                </copy>
                
                <unzip dest="${classDir}">
                        <fileset dir="${classDir}" includes="*.jar"/>
                </unzip> 
                
                <delete includeEmptyDirs="true">
                        <fileset dir="${classDir}" includes="**/*.jar" />                                        
                        <fileset dir="${classDir}/webapps" includes="**" />
                        <fileset dir="${classDir}" includes="*.tgz" />
                        <fileset dir="${classDir}/META-INF" includes="**"/>
                        <fileset dir="jar" includes="bda_labs_${version}.jar" />
                </delete>
                
        </target>
        
        <target name="unjar" unless="unjar.notRequired"  >
                
                <copy todir="${unjar.dir}">
                        <fileset dir="lib"/>
                </copy>
                
                <unzip dest="${unjar.dir}" >
                        <fileset dir="${unjar.dir}" includes="*.jar"/>
                </unzip> 
                
                <delete includeEmptyDirs="true">
                        <fileset dir="${unjar.dir}" includes="**/*.jar" />                                        
                        <fileset dir="${unjar.dir}/webapps" includes="**" />
                        <fileset dir="${unjar.dir}" includes="*.tgz" />
                        <fileset dir="${unjar.dir}/META-INF" includes="**"/>
                        <fileset dir="jar" includes="bda_labs_${version}.jar" />
                </delete>
                <touch file="${unjar.file}"/>
        </target>
        
        <!-- executable jar from hadoop -->
        <target name="jar" depends="compile,unjar">
                <jar jarfile="jar/bda_labs_${version}.jar" 
                     basedir="${classDir}" >
                        <fileset dir="${unjar.dir}"/>
                        <!--
                        <metainf file="${basedir}/MANIFEST.addition.txt"/>
                        -->
                        <manifest>
                                <attribute name="Main-Class" value="${data.main.class}" />
                        </manifest>
                </jar>
<!--                
                <delete includeEmptyDirs="true">
                        <fileset dir="${classDir}" includes="**"/>
                </delete>        
-->
        </target>
    
        <target name="run" depends="jar, run-simple">
        </target>
        <target name="run-simple">

                <mkdir dir="${data.input.dir}" />
                <delete>
                        <fileset dir="${data.input.dir}">
                                <include name="*.*" />
                                <exclude name="${data.file}" />
                        </fileset>
                </delete>

                <copy overwrite="false" file="${data.input.dir}/../${data.file}" todir="${data.input.dir}" />
                <!-- <mkdir dir="${data.output.dir}"/> -->
                <delete dir="${data.output.dir}" />
                <echo>
                        running ${data.main.class}
                        ${hadoop.exec}
                        jar ${jar.file}
                        ${reducers.number} ${data.input.dir} ${data.output.dir}
                        
                </echo>
                <exec executable="${hadoop.exec}">
                        <!--
                    bin/hadoop jar PATH_TO_JAR/bda_labs_0.1.0.jar heigvd.bda.labs.wordcount.WordCount NUM_REDUCERS INPUT_PATH OUTPUT_PATH
                    <exec executable="cmd">
                                <arg value="/c"/>
                                <arg value="ant.bat"/>
                                <arg value="-p"/>
                        </exec> 
                     -->
                        <arg value="jar" />
                        <arg value="${jar.file}" />
                        <!--
                        <arg value="${data.main.class}" />
                        -->
                        <arg value="${reducers.number}" />
                        <arg value="${data.input.dir}" />
                        <arg value="${data.output.dir}" />
                        <arg value="${data.firstName.dir}" />
                </exec>
        </target>
        <target name="run-class">

                <mkdir dir="${data.input.dir}" />
                <delete>
                        <fileset dir="${data.input.dir}">
                                <include name="*.*" />
                                <exclude name="${data.file}" />
                        </fileset>
                </delete>

                <copy overwrite="false" file="${data.input.dir}/../${data.file}" todir="${data.input.dir}" />
                <!-- <mkdir dir="${data.output.dir}"/> -->
                <delete dir="${data.output.dir}" />
                <echo>
                        running ${data.main.class}
                        ${hadoop.exec}
                        jar ${jar.file}
                        ${reducers.number} ${data.input.dir} ${data.output.dir}
                        
                </echo>
                <exec executable="${hadoop.exec}">
                        <arg value="jar" />
                        <arg value="${jar.file}" />
                        
                        <arg value="${data.main.class}" />
                        
                        <arg value="${reducers.number}" />
                        <arg value="${data.input.dir}" />
                        <arg value="${data.output.dir}" />
                </exec>
        </target>        
</project>